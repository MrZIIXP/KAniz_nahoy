let total = 0;
let currentBet = 0;
let wonAmount = 0;

function initCasino() {
  total = promptAmount("–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å:");
  updateDisplay();
  checkBalance();
}

function promptAmount(message) {
  let value;
  do {
    value = prompt(message);
    if (value === null) return 0;
  } while (isNaN(value) || value.trim() === '');
  return parseFloat(value);
}

function updateDisplay() {
  document.getElementById("total").textContent = `–ò—Ç–æ–≥: ${total.toFixed(2)}$`;
  document.getElementById("current-bet").textContent = `–°—Ç–∞–≤–∫–∞: ${currentBet.toFixed(2)}$`;

  const debtDisplay = document.getElementById("debt");
  if (total < 0) {
    debtDisplay.style.display = "block";
    debtDisplay.textContent = `–î–æ–ª–≥: ${Math.abs(total).toFixed(2)}$`;
  } else {
    debtDisplay.style.display = "none";
  }
}–∫

function placeBet() {
  let bet = promptAmount("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏:");
  if (bet > 0) {
    currentBet += bet;
    total -= bet;
    updateDisplay();
    checkBalance();
  }
}

function finishBet() {
  total += currentBet;
  currentBet = 0;
  updateDisplay();
  checkBalance();
}

function addBalance() {
  let add = promptAmount("–°–∫–æ–ª—å–∫–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å?");
  if (add > 0) {
    total += add;
    updateDisplay();
    checkBalance();
  }
}

function spinSlot() {
  if (currentBet <= 0) return;
  const symbols = ['7', 'üíé', 'üçí', 'üçã'];
  const result = Array.from({length: 3}, () => symbols[Math.floor(Math.random() * symbols.length)]);
  document.getElementById("slot-grid").innerHTML = result.map(s => `<div>${s}</div>`).join('');
  let multiplier = 0;
  if (result.every(s => s === '7')) multiplier = 7;
  else if (result.every(s => s === 'üíé')) multiplier = 3;
  else if (result.every(s => s === 'üçí')) multiplier = 2;
  else if (result.every(s => s === 'üçã')) multiplier = 1.5;
  wonAmount = currentBet * multiplier;
  if (multiplier > 0) {
    alert(`–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: ${wonAmount.toFixed(2)}!`);
    currentBet = wonAmount;
  } else {
    alert("–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.");
    currentBet = 0;
  }
  updateDisplay();
  checkBalance();
}

function spinRoulette() {
  if (currentBet <= 0) return;

  let betColor = prompt("–í–≤–µ–¥–∏—Ç–µ —Ü–≤–µ—Ç (–∫—Ä–∞—Å–Ω—ã–π / —á—ë—Ä–Ω—ã–π) –∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º:");
  if (betColor) betColor = betColor.toLowerCase().trim();
  if (betColor && betColor !== "–∫—Ä–∞—Å–Ω—ã–π" && betColor !== "—á—ë—Ä–Ω—ã–π") {
    alert("–¶–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å '–∫—Ä–∞—Å–Ω—ã–π' –∏–ª–∏ '—á—ë—Ä–Ω—ã–π'");
    return;
  }

  let betNumberRaw = prompt("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 36 –∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º:");
  let betNumber = betNumberRaw ? parseInt(betNumberRaw) : null;
  if (betNumberRaw && (isNaN(betNumber) || betNumber < 0 || betNumber > 36)) {
    alert("–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 0 –¥–æ 36");
    return;
  }

  const resultNumber = Math.floor(Math.random() * 37);
  const colors = ["–∫—Ä–∞—Å–Ω—ã–π", "—á—ë—Ä–Ω—ã–π"];
  const resultColor = colors[Math.floor(Math.random() * 2)];

  document.getElementById("roulette-result").textContent = `–†–µ–∑—É–ª—å—Ç–∞—Ç: ${resultNumber} ${resultColor}`;

  let win = true;

  if (betColor && betNumberRaw) {
    win = (resultColor === betColor && resultNumber === betNumber);
    wonAmount = win ? currentBet * 5 : 0;
  } else if (betColor) {
    win = (resultColor === betColor);
    wonAmount = win ? currentBet * 1.5 : 0;
  } else if (betNumberRaw) {
    win = (resultNumber === betNumber);
    wonAmount = win ? currentBet * 2 : 0;
  } else {
    wonAmount = 0;
    win = false;
  }

  if (win && wonAmount > 0) {
    alert(`–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: ${wonAmount.toFixed(2)}!`);
    currentBet = wonAmount;
  } else {
    alert("–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.");
    currentBet = 0;
  }

  updateDisplay();
  checkBalance();
}

function rollDice() {
  if (currentBet <= 0) return;
  const dice = Math.floor(Math.random() * 6) + 1; // –í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 6
  document.getElementById("dice-result").textContent = `–†–µ–∑—É–ª—å—Ç–∞—Ç: ${dice}`;
  if (dice < 6) {
    alert("–°—É–º–º–∞ –º–µ–Ω—å—à–µ 6 ‚Äî –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. –°—Ç–∞–≤–∫–∞ –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω–∞.");
    currentBet = 0;
  } else {
    wonAmount = (currentBet / 3) * dice;
    alert(`–í—ã–∏–≥—Ä—ã—à: ${wonAmount.toFixed(2)}!`);
    currentBet = wonAmount;
  }
  updateDisplay();
  checkBalance();
}


function checkBalance() {
  const buttons = ["bet-button", "finish-button", "slot-button", "roulette-button", "dice-button"];
  const inDebt = total < 0;

  for (let id of buttons) {
    const btn = document.getElementById(id);
    if (btn) {
      btn.disabled = false;
      btn.classList.toggle("negative", inDebt);
    }
  }

  if (total === 0) {
    if (confirm("–ë–∞–ª–∞–Ω—Å 0$. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –µ–≥–æ.")) {
      total += promptAmount("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:");
      updateDisplay();
    }
  }

  // –ï—Å–ª–∏ –≤ –º–∏–Ω—É—Å–µ ‚Äî –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–ø–ª–∞—Ç—É –¥–æ–ª–≥–∞
  while (total < 0) {
    alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–ø–ª–∞—Ç–∏—Ç–µ –¥–æ–ª–≥");
    total += promptAmount("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –æ–ø–ª–∞—Ç—ã –¥–æ–ª–≥–∞:");
    updateDisplay();
  }
}
